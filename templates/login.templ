package templates

import (
	"net/http"
	"wedding-invite/pkg/i18n"
	"wedding-invite/pkg/middleware"
)

templ Login(errorMsg string, r *http.Request) {
	@Base(i18n.T(middleware.GetLanguage(r), "login.title"), r) {
		<div class="flex flex-col items-center justify-center min-h-[70vh] py-6">
			<div class="text-center mb-10">
				<h1 class="calligraphy text-5xl font-bold text-primary-dark mb-3">{ i18n.T(middleware.GetLanguage(r), "login.title") }</h1>
				<p class="calligraphy text-3xl text-gray-600">{ i18n.T(middleware.GetLanguage(r), "login.subtitle") }</p>
			</div>
			<div class="w-full max-w-md bg-white rounded-lg shadow-md p-8">
				<p class="text-center mb-6">{ i18n.T(middleware.GetLanguage(r), "login.form_text_one") }</p>
				<p class="text-center mb-6">{ i18n.T(middleware.GetLanguage(r), "login.form_text_two") }</p>
				if errorMsg != "" {
					<div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4" role="alert">
						<span class="block sm:inline">
							if errorMsg == "Invalid email address. Please check and try again." {
								{ i18n.T(middleware.GetLanguage(r), "login.errors.invalid_email") }
							} else if errorMsg == "Please enter your email to continue." {
								{ i18n.T(middleware.GetLanguage(r), "login.errors.auth_required") }
							} else if errorMsg == "System error. Please try again later." {
								{ i18n.T(middleware.GetLanguage(r), "login.errors.system") }
							} else {
								{ errorMsg }
							}
						</span>
					</div>
				}
				<form action="/login" method="POST" class="space-y-6">
					<div>
						<label for="email" class="block text-sm font-medium text-gray-700 mb-2">{ i18n.T(middleware.GetLanguage(r), "login.email_label") }</label>
						<input
							type="email"
							id="email"
							name="email"
							required
							autocomplete="email"
							class="w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent"
							placeholder={ i18n.T(middleware.GetLanguage(r), "login.email_placeholder") }
						/>
					</div>
					<div>
						<button
							type="submit"
							class="w-full bg-primary hover:bg-primary-dark text-white font-medium py-3 px-4 rounded-md transition duration-300"
						>
							{ i18n.T(middleware.GetLanguage(r), "login.submit") }
						</button>
					</div>
				</form>
			</div>
			<div class="mt-6 flex items-center space-x-2">
				if middleware.GetLanguage(r) == "ro" {
					<a href="?lang=ro" class="text-sm font-bold text-primary-dark">
						{ i18n.T(middleware.GetLanguage(r), "language.ro") }
					</a>
				} else {
					<a href="?lang=ro" class="text-sm text-gray-600 hover:text-primary-dark">
						{ i18n.T(middleware.GetLanguage(r), "language.ro") }
					</a>
				}
				<span class="text-gray-300">|</span>
				if middleware.GetLanguage(r) == "en" {
					<a href="?lang=en" class="text-sm font-bold text-primary-dark">
						{ i18n.T(middleware.GetLanguage(r), "language.en") }
					</a>
				} else {
					<a href="?lang=en" class="text-sm text-gray-600 hover:text-primary-dark">
						{ i18n.T(middleware.GetLanguage(r), "language.en") }
					</a>
				}
			</div>
		</div>
	}
}
